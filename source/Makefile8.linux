# ------------------------------------------------------------------------------
# Makefile.linux \ 32-bit Pinguino
# Regis Blanchot <rblanchot@gmail.com> 
# ------------------------------------------------------------------------------

# ------------------------------------------------------------------------------
# directories
# ------------------------------------------------------------------------------
# HOME, PDEDIR, COMP, PROC & BOARD are defined in pinguino.py


OSDIR		=	linux
SRCDIR		=	$(HOME)/source
P8DIR		=	$(HOME)/p8
P8CORE		=	$(HOME)/$(OSDIR)/p8
BINDIR		=	$(P8CORE)/bin
INCDIR		=	$(P8DIR)/include
LKRDIR		=	$(P8DIR)/lkr
OBJDIR		=	$(P8DIR)/obj

INCLUDEDIRS	=	-I$(INCDIR)\
				-I$(INCDIR)/non-free/pic16\
				-I$(INCDIR)/pinguino/core\
				-I$(INCDIR)/pinguino/libraries\
				-I$(LKRDIR)\
				-I$(PDEDIR)\
				-I$(OBJDIR)
				#-I$(P8_DIR)/share/sdcc/include/pic16

LIBDIRS		=	-L$(OBJDIR)/usb

	'-llibio' + board.proc + '.lib',\
	"-l" + os.path.join(P8_DIR, 'share', 'sdcc', 'lib', 'pic16', 'libpuf.lib'),\
	"-l" + os.path.join(P8_DIR, 'share', 'sdcc', 'lib', 'pic16', 'libc18f.lib'),\
	"-l" + os.path.join(P8_DIR, 'share', 'sdcc', 'lib', 'pic16', 'libm18f.lib'),\
	"-l" + os.path.join(P8_DIR, 'share', 'sdcc', 'lib', 'pic16', 'libsdcc.lib'),\

# ------------------------------------------------------------------------------
# commands
# ------------------------------------------------------------------------------

CC			=	$(BINDIR)/$(COMP)
LIBS		=	-lm -lgcc -lc
RM			=	rm -f -v
CP			=	cp
MV			=	mv

# ------------------------------------------------------------------------------
# flags
# ------------------------------------------------------------------------------

CFLAGS		=	-mpic16,\
				--denable-peeps,\
				--obanksel=9,\
				--opt-code-size,\
				--optimize-cmp,\
				--optimize-df

LDFLAGS		=	$(LIBDIRS) $(LIBS)

ELF_FLAGS	=	-O2 -EL -march=24kc\
				-msoft-float\
				-Wl,--defsym,_min_heap_size=8192\
				-Wl,-Map=$(SRCDIR)/output.map\
				-D __PIC32MX__ -D __$(PROC)__ -D $(BOARD)\
				-T$(LKRDIR)/procdefs.ld\
				-T$(LKRDIR)/elf32pic32mx.x

#-------------------------------------------------------------------------------
#	rules
#-------------------------------------------------------------------------------

all: clean compile link exec correct

clean:
	#----------------------------------------------------------------------------
	#	clean
	#----------------------------------------------------------------------------
	$(RM) $(SRCDIR)/main32.o
	$(RM) $(SRCDIR)/main32.elf
	$(RM) $(SRCDIR)/main32.hex
	$(RM) $(OBJDIR)/processor.o

compile:
	#----------------------------------------------------------------------------
	#	compile
	#----------------------------------------------------------------------------
	$(CC) $(ELF_FLAGS) $(LDFLAGS) $(CFLAGS) --compile-only -o $(SRCDIR)/main32.elf $(SRCDIR)/main32.c\
		$(OBJDIR)/crt0.S\
		$(OBJDIR)/processor.o\
		$(OBJDIR)/usb/libcdc.a\
		$(OBJDIR)/usb/libadb.a\
		$(LKRDIR)/ISRwrapper.S\
		$(INCDIR)/non-free/p32xxxx.h\
		$(LIBS)

link:
	#----------------------------------------------------------------------------
	#	compile and link
	#----------------------------------------------------------------------------
	$(CC) -o $(SRCDIR)/main.hex $(CFLAGS) \
			--no-crt,\
			-Wl-s" + os.path.join(P8_DIR, 'lkr', board.bldr + board.proc + '.lkr') + ",-m",\
			"-p" + board.proc,\
			"-D" + board.bldr,\
			"-L" + os.path.join(P8_DIR, 'share', 'sdcc', 'lib', 'pic16'),\
			"-I" + os.path.join(P8_DIR, 'share', 'sdcc', 'include', 'pic16'),\
			"-I" + os.path.join(P8_DIR, 'include'),\
			"-I" + os.path.join(P8_DIR, 'include', 'non-free', 'pic16'),\
			"-I" + os.path.join(P8_DIR, 'include', 'pinguino', 'core'),\
			"-I" + os.path.join(P8_DIR, 'include', 'pinguino', 'libraries'),\
			'-llibio' + board.proc + '.lib',\
			"-l" + os.path.join(P8_DIR, 'share', 'sdcc', 'lib', 'pic16', 'libpuf.lib'),\
			"-l" + os.path.join(P8_DIR, 'share', 'sdcc', 'lib', 'pic16', 'libc18f.lib'),\
			"-l" + os.path.join(P8_DIR, 'share', 'sdcc', 'lib', 'pic16', 'libm18f.lib'),\
			"-l" + os.path.join(P8_DIR, 'share', 'sdcc', 'lib', 'pic16', 'libsdcc.lib'),\
			os.path.join(P8_DIR, 'obj', 'application_iface.o'),\
			os.path.join(P8_DIR, 'obj', 'usb_descriptors.o'),\
			os.path.join(P8_DIR, 'obj', 'crt0ipinguino.o'),\
			os.path.join(SOURCE_DIR, 'main.o')
$(ELF_FLAGS) $(LDFLAGS)   $(SRCDIR)/main32.c\
		$(OBJDIR)/crt0.S\
		$(OBJDIR)/processor.o\
		$(OBJDIR)/usb/libcdc.a\
		$(OBJDIR)/usb/libadb.a\
		$(LKRDIR)/ISRwrapper.S\
		$(INCDIR)/non-free/p32xxxx.h\
		$(LIBS)

